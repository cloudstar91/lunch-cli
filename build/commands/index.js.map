{"version":3,"sources":["index.js"],"names":["main","id","name","foods","value","extras","drinks","MenuList","list","orderNumber","setOrderNumber","orderQuantity","setOrderQuantity","setName","step","setStep","cart","setCart","handleSubmitFoodName","data","n","input","parseInt","numberRange","map","i","includes","console","log","handleSubmitQuantity","e"],"mappings":"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","file":"index.js","sourceRoot":"../../commands","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Text, Box } from \"ink\";\nimport Table from \"ink-table\";\nimport TextInput from \"ink-text-input\";\n\nconst main = [\n\t{ id: 1, name: \"sườn non nướng sữa\" },\n\t{ id: 2, name: \"Thịt kho trứng cút\" },\n\t{ id: 3, name: \"thịt bò xào cải chua\" }\n];\n\nconst foods = [\n\t{\n\t\tname: \"nguyen\",\n\t\tmain: [\n\t\t\t{\n\t\t\t\tname: \"suon heo\",\n\t\t\t\tvalue: 3\n\t\t\t}\n\t\t],\n\t\textras: [\n\t\t\t{\n\t\t\t\tname: \"suon bo\",\n\t\t\t\tvalue: 2\n\t\t\t}\n\t\t],\n\t\tdrinks: [\n\t\t\t{\n\t\t\t\tname: \"nuoc dua\",\n\t\t\t\tvalue: 2\n\t\t\t}\n\t\t]\n\t}\n];\n\nconst extras = [\n\t{ id: 1, name: \"sườn thêm\" },\n\t{ id: 2, name: \"thịt kho thêm\" },\n\t{ id: 3, name: \"bò thêm\" }\n];\n\nconst drinks = [{ id: 1, name: \"Nuoc dua\" }];\n\n///List all Menu for today\nconst MenuList = ({ list }) => {\n\tconst [orderNumber, setOrderNumber] = useState(\"\");\n\tconst [orderQuantity, setOrderQuantity] = useState(\"\");\n\tconst [name, setName] = useState(\"\");\n\tconst [step, setStep] = useState(0);\n\tconst [cart, setCart] = useState([]);\n\n\tconst handleSubmitFoodName = (data, n) => {\n\t\tconst input = parseInt(n);\n\t\tconst numberRange = data.map(i => i.id);\n\t\tif (input === 0 || numberRange.includes(input)) {\n\t\t\tconsole.log(\"Going to next step \" + (step + 1));\n\t\t\tsetStep(step + 1);\n\t\t\tsetOrderNumber(\"\");\n\t\t} else {\n\t\t\tconsole.log(\"number invalid\");\n\t\t\tconsole.log(numberRange);\n\t\t\tconsole.log(input);\n\t\t}\n\t};\n\tconst handleSubmitQuantity = (data, n) => {\n\t\tconst input = parseInt(n);\n\t\tconst numberRange = data.map(i => i.id);\n\t\tconsole.log(\"Going to next step \" + (step + 1));\n\t\tsetStep(step + 1);\n\t\tsetOrderNumber(\"\");\n\t};\n\n\tswitch (step) {\n\t\tcase 1:\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<Text>Pick ur main</Text>\n\t\t\t\t\t<Table data={main} />\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Box marginRight={1}>Pick number:</Box>\n\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\tvalue={orderNumber}\n\t\t\t\t\t\t\tonChange={e => setOrderNumber(e)}\n\t\t\t\t\t\t\tonSubmit={() => handleSubmitFoodName(main, orderNumber)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Box>\n\t\t\t\t</>\n\t\t\t);\n\t\tcase 2:\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Box marginRight={1}>Quantity: </Box>\n\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\tvalue={orderNumber}\n\t\t\t\t\t\t\tonChange={e => setOrderNumber(e)}\n\t\t\t\t\t\t\tonSubmit={() => handleSubmitFoodName(main, orderNumber)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Box>\n\t\t\t\t</>\n\t\t\t);\n\t\tcase 3:\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<Text> Pick your extras</Text>\n\t\t\t\t\t<Table data={extras} />\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Box marginRight={1}>Pick number:</Box>\n\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\tvalue={orderNumber}\n\t\t\t\t\t\t\tonChange={e => setOrderNumber(e)}\n\t\t\t\t\t\t\tonSubmit={() => handleSubmitFoodName(extras, orderNumber)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Box>\n\t\t\t\t</>\n\t\t\t);\n\t\tcase 4:\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Box marginRight={1}>Quantity: </Box>\n\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\tvalue={orderNumber}\n\t\t\t\t\t\t\tonChange={e => setOrderNumber(e)}\n\t\t\t\t\t\t\tonSubmit={() => handleSubmitFoodName(main, orderNumber)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Box>\n\t\t\t\t</>\n\t\t\t);\n\t\tcase 5:\n\t\t\treturn <Text>Done</Text>;\n\t\tdefault:\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<Box marginRight={1}>\n\t\t\t\t\t\t<Text> Type your name: </Text>\n\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\tonChange={e => setName(e)}\n\t\t\t\t\t\t\tonSubmit={() => setStep(step + 1)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Box>\n\t\t\t\t</>\n\t\t\t);\n\t}\n};\n\nexport default MenuList;\n"]}