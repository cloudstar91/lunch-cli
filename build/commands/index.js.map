{"version":3,"sources":["index.js"],"names":["foods","name","main","value","extras","drinks","id","cartDefault","MenuList","list","orderNumber","setOrderNumber","orderQuantity","setOrderQuantity","setName","step","setStep","cart","setCart","handleSubmitFoodName","data","n","input","parseInt","numberRange","map","i","includes","console","log","foodMapping","listFood","foodType","food","find","push","e"],"mappings":"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","file":"index.js","sourceRoot":"../../commands","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Text, Box } from \"ink\";\nimport Table from \"ink-table\";\nimport TextInput from \"ink-text-input\";\n\nconst foods = [\n\t{\n\t\tname: \"nguyen\",\n\t\tmain: [\n\t\t\t{\n\t\t\t\tname: \"suon heo\",\n\t\t\t\tvalue: 3\n\t\t\t}\n\t\t],\n\t\textras: [\n\t\t\t{\n\t\t\t\tname: \"suon bo\",\n\t\t\t\tvalue: 2\n\t\t\t}\n\t\t],\n\t\tdrinks: [\n\t\t\t{\n\t\t\t\tname: \"nuoc dua\",\n\t\t\t\tvalue: 2\n\t\t\t}\n\t\t]\n\t}\n];\n\nconst main = [\n\t{ id: 1, name: \"sườn non nướng sữa\" },\n\t{ id: 2, name: \"Thịt kho trứng cút\" },\n\t{ id: 3, name: \"thịt bò xào cải chua\" }\n];\n\nconst extras = [\n\t{ id: 1, name: \"sườn thêm\" },\n\t{ id: 2, name: \"thịt kho thêm\" },\n\t{ id: 3, name: \"bò thêm\" }\n];\n\nconst drinks = [{ id: 1, name: \"Nuoc dua\" }];\n\nvar cartDefault = {\n\tname: \"\",\n\tmain: [],\n\textras: [],\n\tdrinks: []\n};\n\n///List all Menu for today\nconst MenuList = ({ list }) => {\n\tconst [orderNumber, setOrderNumber] = useState(\"\");\n\tconst [orderQuantity, setOrderQuantity] = useState(\"\");\n\tconst [name, setName] = useState(\"\");\n\tconst [step, setStep] = useState(0);\n\tconst [cart, setCart] = useState(cartDefault);\n\n\tconst handleSubmitFoodName = (data, n) => {\n\t\tconst input = parseInt(n);\n\t\tconst numberRange = data.map(i => i.id);\n\t\tif (input === 0 || numberRange.includes(input)) {\n\t\t\tconsole.log(\"Going to next step \" + (step + 1));\n\t\t\tsetStep(step + 1);\n\t\t} else {\n\t\t\tconsole.log(\"number invalid\");\n\t\t\tconsole.log(numberRange);\n\t\t\tconsole.log(input);\n\t\t}\n\t};\n\n\tconst foodMapping = (orderNumber, orderQuantity = 1, listFood, foodType) => {\n\t\tconst food = listFood.find(food => food.id === orderNumber);\n\t\tfood.value = orderQuantity;\n\n\t\tif (foodType === \"main\") setCart(cart, cart.main.push(food));\n\t\telse if (foodType === \"extras\") setCart(cart, cart.extras.push(food));\n\t\telse setCart(cart, cart.extras.push(food));\n\n\t\tconsole.log(cart);\n\t\tsetOrderNumber(\"\");\n\t\tsetOrderQuantity(\"\");\n\t\tsetStep(step + 1);\n\t};\n\n\tswitch (step) {\n\t\tcase 1:\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<Text>Pick ur main</Text>\n\t\t\t\t\t<Table data={main} />\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Box marginRight={1}>Pick number: </Box>\n\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\tvalue={orderNumber}\n\t\t\t\t\t\t\tonChange={e => setOrderNumber(e)}\n\t\t\t\t\t\t\tonSubmit={() => handleSubmitFoodName(main, orderNumber)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Box>\n\t\t\t\t</>\n\t\t\t);\n\t\tcase 2:\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Box marginRight={1}>Quantity: </Box>\n\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\tvalue={orderQuantity}\n\t\t\t\t\t\t\tonChange={e => setOrderQuantity(e)}\n\t\t\t\t\t\t\tonSubmit={() => foodMapping(1, orderQuantity, main, \"main\")}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Box>\n\t\t\t\t</>\n\t\t\t);\n\t\tcase 3:\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<Text> Pick your extras</Text>\n\t\t\t\t\t<Table data={extras} />\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Box marginRight={1}>Pick number:</Box>\n\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\tvalue={orderNumber}\n\t\t\t\t\t\t\tonChange={e => setOrderNumber(e)}\n\t\t\t\t\t\t\tonSubmit={() => handleSubmitFoodName(extras, orderNumber)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Box>\n\t\t\t\t</>\n\t\t\t);\n\t\tcase 4:\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Box marginRight={1}>Quantity: </Box>\n\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\tvalue={orderQuantity}\n\t\t\t\t\t\t\tonChange={e => setOrderQuantity(e)}\n\t\t\t\t\t\t\tonSubmit={() =>\n\t\t\t\t\t\t\t\tfoodMapping(orderNumber, orderQuantity, main, \"main\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Box>\n\t\t\t\t</>\n\t\t\t);\n\t\tcase 5:\n\t\t\treturn <Text>Done</Text>;\n\t\tdefault:\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<Box marginRight={1}>\n\t\t\t\t\t\t<Text> Type your name: </Text>\n\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\tonChange={e => setName(e)}\n\t\t\t\t\t\t\tonSubmit={() => setStep(step + 1)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Box>\n\t\t\t\t</>\n\t\t\t);\n\t}\n};\n\nexport default MenuList;\n"]}